# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: src/vs/BlitzSearchNPP.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      # run: msbuild GitSCM.vcxproj /m /p:configuration="${{ matrix.build_configuration }}" /p:platform="${{ matrix.build_platform }}" /p:PlatformToolset="v142" /target:zip
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Get release file version
      run: |
        echo "DLL_VERSION=$((Get-Item .\src\vs\x64\Release\BlitzSearch.dll).VersionInfo.FileVersion)" >> $env:GITHUB_ENV

    - name: Archive Release
      uses: thedoctor0/zip-release@0.7.6
      with:
        type: 'zip'
        filename: 'BlitzSearch-v${{ env.DLL_VERSION }}-x64.zip'
        directory: 'src/vs/x64/Release'
        exclusions: '*.git* /*node_modules/* .editorconfig *.exp *.lib *.pdb'

    - name: Create release and upload
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
           generate_release_notes: true
           prerelease: false
           draft: false
           files: "src/vs/x64/Release/BlitzSearch-v${{ env.DLL_VERSION }}-x64.zip"
           tag_name: "v${{ env.DLL_VERSION }}"
           name: "BlitzSearch - v${{ env.DLL_VERSION }}"

    - name: SHA256
      if: env.BUILD_CONFIGURATION == 'Release'
      shell: bash
      run: sha256sum.exe src/vs/x64/Release/BlitzSearch-v${{ env.DLL_VERSION }}-x64.zip
